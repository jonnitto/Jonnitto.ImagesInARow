prototype(Jonnitto.ImagesInARow:Image) < prototype(Neos.Neos:ContentComponent) {
    asset = ${q(node).property('image')}
    ratio = ${this.asset && this.asset.height ? (this.asset.width / this.asset.height) : 1}
    baseMaxWith = ${Configuration.setting('Jonnitto.ImagesInARow.baseWidth')}
    maximumWidth = ${dimensionsWidth && this.asset ? Math.ceil(dimensionsWidth * this.ratio) : this.baseMaxWith}
    maximumWidth.@process.maximumWidthFromBase = ${value > this.baseMaxWith ? this.baseMaxWith : value}
    alternativeText = ${q(node).property('alternativeText')}
    title = ${q(node).property('title')}
    link = ${q(node).property('link')}
    lightbox = ${q(node).property('lightbox')}
    caption = ${q(node).property('caption')}
    hasLinkOrLightox = ${node.context.live && (props.link || props.lightbox)}

    renderer = Neos.Fusion:Augmenter {
        class = 'jonnitto-imagesinarow__image'
        style = ${'flex:' + props.ratio + ' 1 0%;'}
        content = Carbon.Image:Tag {
            @apply.props = ${props}
            @process.wrap = Neos.Fusion:Tag {
                @if.hasNoLinkOrLightox = ${node.context.live && (props.link || props.lightbox) ? false : true}
                content = ${value}
            }
        }
    }
}
